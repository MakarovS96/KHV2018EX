<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25" zv="Cache for Windows (x86-64) 2018.2 (Build 201U)" ts="2018-04-15 23:10:22">
<Class name="RF.KHAB.Region">
<Super>%Persistent,%XML.Adaptor</Super>
<TimeChanged>64752,50770.970826</TimeChanged>
<TimeCreated>64752,43133.870704</TimeCreated>

<Property name="Key">
<Type>%String</Type>
</Property>

<Property name="Name">
<Type>%String</Type>
</Property>

<Property name="Population">
<Type>%Integer</Type>
</Property>

<Index name="KeyIdx">
<IdKey>1</IdKey>
<Properties>Key</Properties>
<Unique>1</Unique>
</Index>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DataLocation>^RF.KHAB.RegionD</DataLocation>
<DefaultData>RegionDefaultData</DefaultData>
<IdLocation>^RF.KHAB.RegionD</IdLocation>
<IndexLocation>^RF.KHAB.RegionI</IndexLocation>
<StreamLocation>^RF.KHAB.RegionS</StreamLocation>
<Data name="RegionDefaultData">
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>Key</Value>
</Value>
<Value name="3">
<Value>Name</Value>
</Value>
<Value name="4">
<Value>Population</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="RF.KHAB.Utils">
<TimeChanged>64753,83395.562488</TimeChanged>
<TimeCreated>64752,43133.922593</TimeCreated>

<Method name="Setup">
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set sc = ..Populate()
	//do ##class(%DeepSee.Utils).%BuildCube("KHABCube")
	quit sc
]]></Implementation>
</Method>

<Method name="Populate">
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	do ..ImportXData("RF.KHAB.Region", "RegionXData")
	quit $$$OK
]]></Implementation>
</Method>

<Method name="ImportXData">
<ClassMethod>1</ClassMethod>
<FormalSpec>className:%String,xDataName:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#dim sc As %Status = $$$OK
	set sc= $CLASSMETHOD(className, "%KillExtent")

	set itemsCount = 0

	try{

		if $$$ISERR(sc)
		{
			write !, $System.Status.DisplayError(sc)
			$$$THROWONERROR(sc,sc)
		}

		#dim stream As %Stream.Object = ##class(%Dictionary.CompiledXData).%OpenId("RF.KHAB.Utils"_"||"_xDataName).Data
		#dim reader As %XML.Reader = ##class(%XML.Reader).%New()

		set sc = reader.OpenStream(stream, "literal")
		$$$THROWONERROR(sc,sc)

		do reader.Correlate($piece(className, ".", *), className)

		while reader.Next(.obj, .sc)
		{
			if $$$ISERR(sc)
			{
				write !, $System.Status.DisplayError(sc)
				$$$THROWONERROR(sc,sc)
			}

			set sc = obj.%Save()

			if $$$ISERR(sc)
			{
				write !, $System.Status.DisplayError(sc)
				$$$THROWONERROR(sc,sc)
			}

			set obj = ""
			set itemsCount = itemsCount + 1
		}
	}
	catch(ex){
		w !, ex.Name_" "_ex.Location
	}

	write !,"Import - "_itemsCount_" objects of class "_className
	
	Quit $$$OK
]]></Implementation>
</Method>

<XData name="RegionXData">
<Data><![CDATA[
<RegionXData>
    <Region>
        <Name>Аяно-Майский район</Name>
        <Key>Аяно-Майский район</Key>
        <Population>1971</Population>
    </Region>
    <Region>
        <Name>Охотский район</Name>
        <Key>Охотский район</Key>
        <Population>6717</Population>
    </Region>
    <Region>
        <Name>Тугуро-Чумиканский район</Name>
        <Key>Тугуро-Чумиканский район</Key>
        <Population>1972</Population>
    </Region>
    <Region>
        <Name>Имени Полины Осипенко район</Name>
        <Key>Имени Полины Осипенко район</Key>
        <Population>4627</Population>
    </Region>
    <Region>
        <Name>Вяземский район</Name>
        <Key>Вяземский район</Key>
        <Population>21238</Population>
    </Region>
    <Region>
        <Name>Бикинский район</Name>
        <Key>Бикинский район</Key>
        <Population>22641</Population>
    </Region>
    <Region>
        <Name>Хабаровский район</Name>
        <Key>Хабаровский район</Key>
        <Population>90180</Population>
    </Region>
    <Region>
        <Name>Николаевский район</Name>
        <Key>Николаевский район</Key>
        <Population>28331</Population>
    </Region>
    <Region>
        <Name>Ульчский район</Name>
        <Key>Ульчский район</Key>
        <Population>16044</Population>
    </Region>
    <Region>
        <Name>Верхнебуреинский район</Name>
        <Key>Верхнебуреинский район</Key>
        <Population>25351</Population>
    </Region>
    <Region>
        <Name>Амурский район</Name>
        <Key>Амурский район</Key>
        <Population>61291</Population>
    </Region>
    <Region>
        <Name>Комсомольск-на-Амуре</Name>
        <Key>Комсомольск-на-Амуре</Key>
        <Population>251283</Population>
    </Region>
    <Region>
        <Name>Солнечный район</Name>
        <Key>Солнечный район</Key>
        <Population>30809</Population>
    </Region>
    <Region>
        <Name>Ванинский район</Name>
        <Key>Ванинский район</Key>
        <Population>34316</Population>
    </Region>
    <Region>
        <Name>Имени Лазо район</Name>
        <Key>Имени Лазо район</Key>
        <Population>42238</Population>
    </Region>
    <Region>
        <Name>Комсомольский район</Name>
        <Key>Комсомольский район</Key>
        <Population>28000</Population>
    </Region>
    <Region>
        <Name>Нанайский район</Name>
        <Key>Нанайский район</Key>
        <Population>16332</Population>
    </Region>
    <Region>
        <Name>Советско-Гаванский район</Name>
        <Key>Советско-Гаванский район</Key>
        <Population>40051</Population>
    </Region>
    <Region>
        <Name>Хабаровск</Name>
        <Key>Хабаровск</Key>
        <Population>611160</Population>
    </Region>
</RegionXData>
]]></Data>
</XData>
</Class>
</Export>
